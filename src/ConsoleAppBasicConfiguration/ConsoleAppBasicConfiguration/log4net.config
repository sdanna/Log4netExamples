<?xml version="1.0"?>
<log4net>
  <!--
    The colored console appender allows for ease of readability
    when running the console app in interactive mode.  
    
    This would be good for windows services as well running with 
    Topshelf.
  -->
  <appender name="ColoredConsoleAppender" type="log4net.Appender.ColoredConsoleAppender">
    <mapping>
      <level value="DEBUG" />
      <foreColor value="White, HighIntensity" />
      <backColor value="Blue" />
    </mapping>
    <mapping>
      <level value="INFO" />
      <foreColor value="White, HighIntensity" />
      <backColor value="Green" />
    </mapping>
    <mapping>
      <level value="WARN" />
      <foreColor value="Yellow, HighIntensity" />
      <backColor value="Purple" />
    </mapping>
    <mapping>
      <level value="ERROR" />
      <foreColor value="Yellow, HighIntensity" />
      <backColor value="Red" />
    </mapping>
    <mapping>
      <level value="FATAL" />
      <foreColor value="Yellow, HighIntensity" />
      <backColor value="Red" />
    </mapping>

    <layout type="log4net.Layout.PatternLayout">
      <conversionPattern value="[%level] - [%10.20logger] - %message%newline" />
    </layout>
  </appender>

  <!-- 
    Main Appender captures everything to a rolling log file.
    The log file will roll daily or if the file gets to be 20MB in size it 
    will generate another log for that day.  
  -->
  <appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender">
    <file value="Logs\log.txt" />
    <appendToFile value="true" />
    <rollingStyle value="Composite" />
    <datePattern value="yyyyMMdd" />
    <maxSizeRollBackups value="-1" />
    <maximumFileSize value="20MB" />

    <layout type="log4net.Layout.PatternLayout">
      <conversionPattern value="[%date] - [%-5level] - [%20.30logger] - %message%newline" />
    </layout>
  </appender>

  <!--  
    Event Log Appender will capture only Errors and Warnings.  
    These will be things that the Ops teams need to be aware of if they 
    are occuring.
    
    In order to get the event source created you will need to run a 
    powershell script as an Admin to create it.  This app should be 
    running under a user account with limited domain and machine 
    permissions.
    
    Powershell cmd (as admin prompt):
    New-EventLog -LogName AppGroup/MyApp -Source MyApp
  -->
  <appender name="EventLogAppender" type="log4net.Appender.EventLogAppender" >
    <applicationName value="MyApp" />
    <logName value="AppGroup/MyApp" />
    <threshold value="WARN" />
    <layout type="log4net.Layout.PatternLayout">
      <conversionPattern value="%message" />
    </layout>
  </appender>

  <root>
    <level value="ALL" />
    <appender-ref ref="RollingFileAppender" />
    <appender-ref ref="EventLogAppender" />
    <appender-ref ref="ColoredConsoleAppender" />
  </root>
</log4net>
